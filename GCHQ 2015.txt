ClearAll[unknown,cellGraphics,genSpecsN,genSpecs,gridSpecs,clueRows,clueCols,constraintStrip,constraintTable];
Utilities and constants
Some constants for use in display, etc.
unknown ="-";
cellGraphics = {
1->Graphics[{Black,Rectangle[]},ImageSize->20],unknown->Graphics[{GrayLevel[.95],Rectangle[]},ImageSize->20],0->Graphics[{White,Rectangle[]},ImageSize->20]};
gridSpecs = Sequence[Frame->None,Alignment->Center,ItemSize->{1.25,1.25},Spacings->{0.2,0.2}];
A function to display results
showTable[t_]:=Grid[Join[
Join[ConstantArray["",{9,9}],(Style[#,Bold]&/@PadLeft[#,9,""]&/@clueCols)],
(Thread[f[(Style[#,Bold]&/@PadLeft[#,9,""]&/@clueRows),(t/.cellGraphics)]]/.f->Join)
], gridSpecs];
(*showTable[t_]:=Grid[t/.cellGraphics, gridSpecs];*)
The problem
dim=25;
The "clues" along the sides of the puzzle:
clueRows={{7,3,1,1,7},{1,1,2,2,1,1},{1,3,1,3,1,1,3,1},{1,3,1,1,6,1,3,1},{1,3,1,5,2,1,3,1},{1,1,2,1,1},{7,1,1,1,1,1,7},{3,3},{1,2,3,1,1,3,1,1,2},{1,1,3,2,1,1},{4,1,4,2,1,2},{1,1,1,1,1,4,1,3},{2,1,1,1,2,5},{3,2,2,6,3,1},{1,9,1,1,2,1},{2,1,2,2,3,1},{3,1,1,1,1,5,1},{1,2,2,5},{7,1,2,1,1,1,3},{1,1,2,1,2,2,1},{1,3,1,4,5,1},{1,3,1,3,10,2},{1,3,1,1,6,6},{1,1,2,1,1,2},{7,2,1,2,5}};

clueCols={{7,2,1,1,7},{1,1,2,2,1,1},{1,3,1,3,1,3,1,3,1},{1,3,1,1,5,1,3,1},{1,3,1,1,4,1,3,1},{1,1,1,2,1,1},{7,1,1,1,1,1,7},{1,1,3},{2,1,2,1,8,2,1},{2,2,1,2,1,1,1,2},{1,7,3,2,1},{1,2,3,1,1,1,1,1},{4,1,1,2,6},{3,3,1,1,1,3,1},{1,2,5,2,2},{2,2,1,1,1,1,1,2,1},{1,3,3,2,1,8,1},{6,2,1},{7,1,4,1,1,3},{1,1,1,1,4},{1,3,1,3,7,1},{1,3,1,1,1,2,1,1,4},{1,3,1,4,3,3},{1,1,2,2,2,6,1},{7,1,3,2,1,1}};
Constraints (thusfar) in the puzzle):
constraintTable = ConstantArray[unknown, {dim, dim}];
(constraintTable[[Sequence@@#]]=1)&/@{
{4,4},{4,5},{4,13},{4,14},{4,22},
{9,7},{9,8},{9,11},{9,15},{9,16},{9,19},
{17, 7}, {17, 12}, {17, 17},{17, 21},
{22, 4},{22, 5},{22, 10},{22, 11},{22, 16},{22, 21},{22, 22}
};
showTable[constraintTable]
											1													2						1			
											3	1	1					2		1				2						3			
											1	3	3		7		2	2		2		3		1	1					1		1	
										1	3	1	1	1	1		1	1		3		3		1	3		7		1	1	1	1	7
									7	1	1	1	1	1	1		2	2	1	1	4	1	1	1	3		1	1	3	1	3	2	1
									2	2	3	5	4	1	1		1	1	7	1	1	1	2	1	2		4	1	1	2	1	2	3
									1	2	1	1	1	2	1	1	8	1	3	1	1	1	5	1	1	6	1	1	3	1	4	2	2
									1	1	3	3	3	1	1	1	2	1	2	1	2	3	2	2	8	2	1	1	7	1	3	6	1
									7	1	1	1	1	1	7	3	1	2	1	1	6	1	2	1	1	1	3	4	1	4	3	1	1
				7	3	1	1	7																									
			1	1	2	2	1	1																									
	1	3	1	3	1	1	3	1																									
	1	3	1	1	6	1	3	1																									
	1	3	1	5	2	1	3	1																									
				1	1	2	1	1																									
		7	1	1	1	1	1	7																									
							3	3																									
1	2	3	1	1	3	1	1	2																									
			1	1	3	2	1	1																									
			4	1	4	2	1	2																									
	1	1	1	1	1	4	1	3																									
			2	1	1	1	2	5																									
			3	2	2	6	3	1																									
			1	9	1	1	2	1																									
			2	1	2	2	3	1																									
		3	1	1	1	1	5	1																									
					1	2	2	5																									
		7	1	2	1	1	1	3																									
		1	1	2	1	2	2	1																									
			1	3	1	4	5	1																									
			1	3	1	3	10	2																									
			1	3	1	1	6	6																									
			1	1	2	1	1	2																									
				7	2	1	2	5																									


The solution
The approach is to progressively refine the constraints until they are free of unknowns.
genSpecsN[clue_,n_]:=
Switch[n,1,#,-1,Join[{0},#,{0}],0,{Append[#,0],Prepend[#,0]}]&/@ 
(Union@@(Permutations/@(IntegerPartitions[dim-Plus@@clue, {Length[clue]+n}])));genSpecs[clue_]:= Riffle[#,clue]&/@Union[genSpecsN[clue,-1],Union@@genSpecsN[clue,0], genSpecsN[clue,1]]
genCells[spec_]:=Flatten[{ConstantArray[0,#[[1]]],ConstantArray[1,#[[2]]]}&/@
 Partition[Append[spec,0],2]]
isDone[strip_] := FreeQ[strip,unknown];
constraintStrip[_,constraint_]:= constraint/;isDone[constraint];constraintStrip[cells_,constraint_]:=
Module[{constrainedCells=Cases[cells,constraint/.unknown->_]},
Switch[#,Length[constrainedCells],1,0,0,_,unknown]&/@(Thread[Total[#]&@constrainedCells])]
While[
Not@isDone@Flatten@constraintTable,
constraintTable = (Thread[f[#1,#2]&[( genCells[#]&/@genSpecs[#])&/@clueRows,constraintTable]]/.f->constraintStrip);
constraintTable = (Thread[f[#1,#2]&[( genCells[#]&/@genSpecs[#])&/@clueCols,constraintTable]]/.f->constraintStrip);
]
showTable[constraintTable]
											1													2						1			
											3	1	1					2		1				2						3			
											1	3	3		7		2	2		2		3		1	1					1		1	
										1	3	1	1	1	1		1	1		3		3		1	3		7		1	1	1	1	7
									7	1	1	1	1	1	1		2	2	1	1	4	1	1	1	3		1	1	3	1	3	2	1
									2	2	3	5	4	1	1		1	1	7	1	1	1	2	1	2		4	1	1	2	1	2	3
									1	2	1	1	1	2	1	1	8	1	3	1	1	1	5	1	1	6	1	1	3	1	4	2	2
									1	1	3	3	3	1	1	1	2	1	2	1	2	3	2	2	8	2	1	1	7	1	3	6	1
									7	1	1	1	1	1	7	3	1	2	1	1	6	1	2	1	1	1	3	4	1	4	3	1	1
				7	3	1	1	7																									
			1	1	2	2	1	1																									
	1	3	1	3	1	1	3	1																									
	1	3	1	1	6	1	3	1																									
	1	3	1	5	2	1	3	1																									
				1	1	2	1	1																									
		7	1	1	1	1	1	7																									
							3	3																									
1	2	3	1	1	3	1	1	2																									
			1	1	3	2	1	1																									
			4	1	4	2	1	2																									
	1	1	1	1	1	4	1	3																									
			2	1	1	1	2	5																									
			3	2	2	6	3	1																									
			1	9	1	1	2	1																									
			2	1	2	2	3	1																									
		3	1	1	1	1	5	1																									
					1	2	2	5																									
		7	1	2	1	1	1	3																									
		1	1	2	1	2	2	1																									
			1	3	1	4	5	1																									
			1	3	1	3	10	2																									
			1	3	1	1	6	6																									
			1	1	2	1	1	2																									
				7	2	1	2	5																									


BarcodeRecognize[(1-constraintTable)//Image]
www.gchq.gov.uk/puzz